Grammar

    0 $accept: program $end

    1 program: function_list_print

    2 function_list_print: function_list

    3 function_list: function
    4              | function_list function

    5 $@1: %empty

    6 $@2: %empty

    7 $@3: %empty

    8 function: $@1 type _ID $@2 _LPAREN parameter _RPAREN $@3 body

    9 type: _TYPE

   10 parameter: %empty

   11 $@4: %empty

   12 parameter: $@4 type _ID

   13 $@5: %empty

   14 $@6: %empty

   15 body: _LBRACKET $@5 variable_list_print $@6 statement_list_print _RBRACKET

   16 variable_list_print: variable_list

   17 variable_list: %empty
   18              | variable_list variable

   19 $@7: %empty

   20 variable: $@7 type _ID _SEMICOLON

   21 statement_list_print: statement_list

   22 statement_list: %empty
   23               | statement_list statement

   24 statement: compound_statement
   25          | assignment_statement
   26          | if_statement_print
   27          | return_statement

   28 $@8: %empty

   29 compound_statement: _LBRACKET $@8 statement_list_print _RBRACKET

   30 $@9: %empty

   31 $@10: %empty

   32 assignment_statement: $@9 _ID _ASSIGN $@10 num_exp _SEMICOLON

   33 num_exp: exp

   34 $@11: %empty

   35 num_exp: num_exp _AROP $@11 exp

   36 exp: literal
   37    | _ID
   38    | function_call

   39 $@12: %empty

   40 $@13: %empty

   41 exp: _LPAREN $@12 num_exp _RPAREN $@13

   42 literal: _INT_NUMBER
   43        | _UINT_NUMBER

   44 $@14: %empty

   45 $@15: %empty

   46 $@16: %empty

   47 function_call: _ID $@14 _LPAREN $@15 argument _RPAREN $@16

   48 argument: %empty
   49         | num_exp

   50 $@17: %empty

   51 if_statement_print: $@17 if_statement

   52 if_statement: if_part

   53 $@18: %empty

   54 if_statement: if_part _ELSE $@18 statement

   55 $@19: %empty

   56 $@20: %empty

   57 $@21: %empty

   58 $@22: %empty

   59 if_part: $@19 _IF _LPAREN $@20 rel_exp $@21 _RPAREN $@22 statement

   60 $@23: %empty

   61 $@24: %empty

   62 rel_exp: $@23 num_exp _RELOP $@24 num_exp

   63 $@25: %empty

   64 $@26: %empty

   65 return_statement: $@25 _RETURN $@26 num_exp _SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
_TYPE (258) 9
_IF (259) 59
_ELSE (260) 54
_RETURN (261) 65
_ID (262) 8 12 20 32 37 47
_INT_NUMBER (263) 42
_UINT_NUMBER (264) 43
_LPAREN (265) 8 41 47 59
_RPAREN (266) 8 41 47 59
_LBRACKET (267) 15 29
_RBRACKET (268) 15 29
_ASSIGN (269) 32
_SEMICOLON (270) 20 32 65
_AROP (271) 35
_RELOP (272) 62
ONLY_IF (273)


Nonterminals, with rules where they appear

$accept (19)
    on left: 0
program (20)
    on left: 1, on right: 0
function_list_print (21)
    on left: 2, on right: 1
function_list (22)
    on left: 3 4, on right: 2 4
function (23)
    on left: 8, on right: 3 4
$@1 (24)
    on left: 5, on right: 8
$@2 (25)
    on left: 6, on right: 8
$@3 (26)
    on left: 7, on right: 8
type (27)
    on left: 9, on right: 8 12 20
parameter (28)
    on left: 10 12, on right: 8
$@4 (29)
    on left: 11, on right: 12
body (30)
    on left: 15, on right: 8
$@5 (31)
    on left: 13, on right: 15
$@6 (32)
    on left: 14, on right: 15
variable_list_print (33)
    on left: 16, on right: 15
variable_list (34)
    on left: 17 18, on right: 16 18
variable (35)
    on left: 20, on right: 18
$@7 (36)
    on left: 19, on right: 20
statement_list_print (37)
    on left: 21, on right: 15 29
statement_list (38)
    on left: 22 23, on right: 21 23
statement (39)
    on left: 24 25 26 27, on right: 23 54 59
compound_statement (40)
    on left: 29, on right: 24
$@8 (41)
    on left: 28, on right: 29
assignment_statement (42)
    on left: 32, on right: 25
$@9 (43)
    on left: 30, on right: 32
$@10 (44)
    on left: 31, on right: 32
num_exp (45)
    on left: 33 35, on right: 32 35 41 49 62 65
$@11 (46)
    on left: 34, on right: 35
exp (47)
    on left: 36 37 38 41, on right: 33 35
$@12 (48)
    on left: 39, on right: 41
$@13 (49)
    on left: 40, on right: 41
literal (50)
    on left: 42 43, on right: 36
function_call (51)
    on left: 47, on right: 38
$@14 (52)
    on left: 44, on right: 47
$@15 (53)
    on left: 45, on right: 47
$@16 (54)
    on left: 46, on right: 47
argument (55)
    on left: 48 49, on right: 47
if_statement_print (56)
    on left: 51, on right: 26
$@17 (57)
    on left: 50, on right: 51
if_statement (58)
    on left: 52 54, on right: 51
$@18 (59)
    on left: 53, on right: 54
if_part (60)
    on left: 59, on right: 52 54
$@19 (61)
    on left: 55, on right: 59
$@20 (62)
    on left: 56, on right: 59
$@21 (63)
    on left: 57, on right: 59
$@22 (64)
    on left: 58, on right: 59
rel_exp (65)
    on left: 62, on right: 59
$@23 (66)
    on left: 60, on right: 62
$@24 (67)
    on left: 61, on right: 62
return_statement (68)
    on left: 65, on right: 27
$@25 (69)
    on left: 63, on right: 65
$@26 (70)
    on left: 64, on right: 65


State 0

    0 $accept: . program $end

    $default  reduce using rule 5 ($@1)

    program              go to state 1
    function_list_print  go to state 2
    function_list        go to state 3
    function             go to state 4
    $@1                  go to state 5


State 1

    0 $accept: program . $end

    $end  shift, and go to state 6


State 2

    1 program: function_list_print .

    $default  reduce using rule 1 (program)


State 3

    2 function_list_print: function_list .
    4 function_list: function_list . function

    _TYPE     reduce using rule 5 ($@1)
    $default  reduce using rule 2 (function_list_print)

    function  go to state 7
    $@1       go to state 5


State 4

    3 function_list: function .

    $default  reduce using rule 3 (function_list)


State 5

    8 function: $@1 . type _ID $@2 _LPAREN parameter _RPAREN $@3 body

    _TYPE  shift, and go to state 8

    type  go to state 9


State 6

    0 $accept: program $end .

    $default  accept


State 7

    4 function_list: function_list function .

    $default  reduce using rule 4 (function_list)


State 8

    9 type: _TYPE .

    $default  reduce using rule 9 (type)


State 9

    8 function: $@1 type . _ID $@2 _LPAREN parameter _RPAREN $@3 body

    _ID  shift, and go to state 10


State 10

    8 function: $@1 type _ID . $@2 _LPAREN parameter _RPAREN $@3 body

    $default  reduce using rule 6 ($@2)

    $@2  go to state 11


State 11

    8 function: $@1 type _ID $@2 . _LPAREN parameter _RPAREN $@3 body

    _LPAREN  shift, and go to state 12


State 12

    8 function: $@1 type _ID $@2 _LPAREN . parameter _RPAREN $@3 body

    _TYPE     reduce using rule 11 ($@4)
    $default  reduce using rule 10 (parameter)

    parameter  go to state 13
    $@4        go to state 14


State 13

    8 function: $@1 type _ID $@2 _LPAREN parameter . _RPAREN $@3 body

    _RPAREN  shift, and go to state 15


State 14

   12 parameter: $@4 . type _ID

    _TYPE  shift, and go to state 8

    type  go to state 16


State 15

    8 function: $@1 type _ID $@2 _LPAREN parameter _RPAREN . $@3 body

    $default  reduce using rule 7 ($@3)

    $@3  go to state 17


State 16

   12 parameter: $@4 type . _ID

    _ID  shift, and go to state 18


State 17

    8 function: $@1 type _ID $@2 _LPAREN parameter _RPAREN $@3 . body

    _LBRACKET  shift, and go to state 19

    body  go to state 20


State 18

   12 parameter: $@4 type _ID .

    $default  reduce using rule 12 (parameter)


State 19

   15 body: _LBRACKET . $@5 variable_list_print $@6 statement_list_print _RBRACKET

    $default  reduce using rule 13 ($@5)

    $@5  go to state 21


State 20

    8 function: $@1 type _ID $@2 _LPAREN parameter _RPAREN $@3 body .

    $default  reduce using rule 8 (function)


State 21

   15 body: _LBRACKET $@5 . variable_list_print $@6 statement_list_print _RBRACKET

    $default  reduce using rule 17 (variable_list)

    variable_list_print  go to state 22
    variable_list        go to state 23


State 22

   15 body: _LBRACKET $@5 variable_list_print . $@6 statement_list_print _RBRACKET

    $default  reduce using rule 14 ($@6)

    $@6  go to state 24


State 23

   16 variable_list_print: variable_list .
   18 variable_list: variable_list . variable

    _TYPE     reduce using rule 19 ($@7)
    $default  reduce using rule 16 (variable_list_print)

    variable  go to state 25
    $@7       go to state 26


State 24

   15 body: _LBRACKET $@5 variable_list_print $@6 . statement_list_print _RBRACKET

    $default  reduce using rule 22 (statement_list)

    statement_list_print  go to state 27
    statement_list        go to state 28


State 25

   18 variable_list: variable_list variable .

    $default  reduce using rule 18 (variable_list)


State 26

   20 variable: $@7 . type _ID _SEMICOLON

    _TYPE  shift, and go to state 8

    type  go to state 29


State 27

   15 body: _LBRACKET $@5 variable_list_print $@6 statement_list_print . _RBRACKET

    _RBRACKET  shift, and go to state 30


State 28

   21 statement_list_print: statement_list .
   23 statement_list: statement_list . statement

    _LBRACKET  shift, and go to state 31

    _IF       reduce using rule 50 ($@17)
    _RETURN   reduce using rule 63 ($@25)
    _ID       reduce using rule 30 ($@9)
    $default  reduce using rule 21 (statement_list_print)

    statement             go to state 32
    compound_statement    go to state 33
    assignment_statement  go to state 34
    $@9                   go to state 35
    if_statement_print    go to state 36
    $@17                  go to state 37
    return_statement      go to state 38
    $@25                  go to state 39


State 29

   20 variable: $@7 type . _ID _SEMICOLON

    _ID  shift, and go to state 40


State 30

   15 body: _LBRACKET $@5 variable_list_print $@6 statement_list_print _RBRACKET .

    $default  reduce using rule 15 (body)


State 31

   29 compound_statement: _LBRACKET . $@8 statement_list_print _RBRACKET

    $default  reduce using rule 28 ($@8)

    $@8  go to state 41


State 32

   23 statement_list: statement_list statement .

    $default  reduce using rule 23 (statement_list)


State 33

   24 statement: compound_statement .

    $default  reduce using rule 24 (statement)


State 34

   25 statement: assignment_statement .

    $default  reduce using rule 25 (statement)


State 35

   32 assignment_statement: $@9 . _ID _ASSIGN $@10 num_exp _SEMICOLON

    _ID  shift, and go to state 42


State 36

   26 statement: if_statement_print .

    $default  reduce using rule 26 (statement)


State 37

   51 if_statement_print: $@17 . if_statement

    $default  reduce using rule 55 ($@19)

    if_statement  go to state 43
    if_part       go to state 44
    $@19          go to state 45


State 38

   27 statement: return_statement .

    $default  reduce using rule 27 (statement)


State 39

   65 return_statement: $@25 . _RETURN $@26 num_exp _SEMICOLON

    _RETURN  shift, and go to state 46


State 40

   20 variable: $@7 type _ID . _SEMICOLON

    _SEMICOLON  shift, and go to state 47


State 41

   29 compound_statement: _LBRACKET $@8 . statement_list_print _RBRACKET

    $default  reduce using rule 22 (statement_list)

    statement_list_print  go to state 48
    statement_list        go to state 28


State 42

   32 assignment_statement: $@9 _ID . _ASSIGN $@10 num_exp _SEMICOLON

    _ASSIGN  shift, and go to state 49


State 43

   51 if_statement_print: $@17 if_statement .

    $default  reduce using rule 51 (if_statement_print)


State 44

   52 if_statement: if_part .
   54             | if_part . _ELSE $@18 statement

    _ELSE  shift, and go to state 50

    $default  reduce using rule 52 (if_statement)


State 45

   59 if_part: $@19 . _IF _LPAREN $@20 rel_exp $@21 _RPAREN $@22 statement

    _IF  shift, and go to state 51


State 46

   65 return_statement: $@25 _RETURN . $@26 num_exp _SEMICOLON

    $default  reduce using rule 64 ($@26)

    $@26  go to state 52


State 47

   20 variable: $@7 type _ID _SEMICOLON .

    $default  reduce using rule 20 (variable)


State 48

   29 compound_statement: _LBRACKET $@8 statement_list_print . _RBRACKET

    _RBRACKET  shift, and go to state 53


State 49

   32 assignment_statement: $@9 _ID _ASSIGN . $@10 num_exp _SEMICOLON

    $default  reduce using rule 31 ($@10)

    $@10  go to state 54


State 50

   54 if_statement: if_part _ELSE . $@18 statement

    $default  reduce using rule 53 ($@18)

    $@18  go to state 55


State 51

   59 if_part: $@19 _IF . _LPAREN $@20 rel_exp $@21 _RPAREN $@22 statement

    _LPAREN  shift, and go to state 56


State 52

   65 return_statement: $@25 _RETURN $@26 . num_exp _SEMICOLON

    _ID           shift, and go to state 57
    _INT_NUMBER   shift, and go to state 58
    _UINT_NUMBER  shift, and go to state 59
    _LPAREN       shift, and go to state 60

    num_exp        go to state 61
    exp            go to state 62
    literal        go to state 63
    function_call  go to state 64


State 53

   29 compound_statement: _LBRACKET $@8 statement_list_print _RBRACKET .

    $default  reduce using rule 29 (compound_statement)


State 54

   32 assignment_statement: $@9 _ID _ASSIGN $@10 . num_exp _SEMICOLON

    _ID           shift, and go to state 57
    _INT_NUMBER   shift, and go to state 58
    _UINT_NUMBER  shift, and go to state 59
    _LPAREN       shift, and go to state 60

    num_exp        go to state 65
    exp            go to state 62
    literal        go to state 63
    function_call  go to state 64


State 55

   54 if_statement: if_part _ELSE $@18 . statement

    _LBRACKET  shift, and go to state 31

    _IF       reduce using rule 50 ($@17)
    _RETURN   reduce using rule 63 ($@25)
    $default  reduce using rule 30 ($@9)

    statement             go to state 66
    compound_statement    go to state 33
    assignment_statement  go to state 34
    $@9                   go to state 35
    if_statement_print    go to state 36
    $@17                  go to state 37
    return_statement      go to state 38
    $@25                  go to state 39


State 56

   59 if_part: $@19 _IF _LPAREN . $@20 rel_exp $@21 _RPAREN $@22 statement

    $default  reduce using rule 56 ($@20)

    $@20  go to state 67


State 57

   37 exp: _ID .
   47 function_call: _ID . $@14 _LPAREN $@15 argument _RPAREN $@16

    _LPAREN   reduce using rule 44 ($@14)
    $default  reduce using rule 37 (exp)

    $@14  go to state 68


State 58

   42 literal: _INT_NUMBER .

    $default  reduce using rule 42 (literal)


State 59

   43 literal: _UINT_NUMBER .

    $default  reduce using rule 43 (literal)


State 60

   41 exp: _LPAREN . $@12 num_exp _RPAREN $@13

    $default  reduce using rule 39 ($@12)

    $@12  go to state 69


State 61

   35 num_exp: num_exp . _AROP $@11 exp
   65 return_statement: $@25 _RETURN $@26 num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 70
    _AROP       shift, and go to state 71


State 62

   33 num_exp: exp .

    $default  reduce using rule 33 (num_exp)


State 63

   36 exp: literal .

    $default  reduce using rule 36 (exp)


State 64

   38 exp: function_call .

    $default  reduce using rule 38 (exp)


State 65

   32 assignment_statement: $@9 _ID _ASSIGN $@10 num_exp . _SEMICOLON
   35 num_exp: num_exp . _AROP $@11 exp

    _SEMICOLON  shift, and go to state 72
    _AROP       shift, and go to state 71


State 66

   54 if_statement: if_part _ELSE $@18 statement .

    $default  reduce using rule 54 (if_statement)


State 67

   59 if_part: $@19 _IF _LPAREN $@20 . rel_exp $@21 _RPAREN $@22 statement

    $default  reduce using rule 60 ($@23)

    rel_exp  go to state 73
    $@23     go to state 74


State 68

   47 function_call: _ID $@14 . _LPAREN $@15 argument _RPAREN $@16

    _LPAREN  shift, and go to state 75


State 69

   41 exp: _LPAREN $@12 . num_exp _RPAREN $@13

    _ID           shift, and go to state 57
    _INT_NUMBER   shift, and go to state 58
    _UINT_NUMBER  shift, and go to state 59
    _LPAREN       shift, and go to state 60

    num_exp        go to state 76
    exp            go to state 62
    literal        go to state 63
    function_call  go to state 64


State 70

   65 return_statement: $@25 _RETURN $@26 num_exp _SEMICOLON .

    $default  reduce using rule 65 (return_statement)


State 71

   35 num_exp: num_exp _AROP . $@11 exp

    $default  reduce using rule 34 ($@11)

    $@11  go to state 77


State 72

   32 assignment_statement: $@9 _ID _ASSIGN $@10 num_exp _SEMICOLON .

    $default  reduce using rule 32 (assignment_statement)


State 73

   59 if_part: $@19 _IF _LPAREN $@20 rel_exp . $@21 _RPAREN $@22 statement

    $default  reduce using rule 57 ($@21)

    $@21  go to state 78


State 74

   62 rel_exp: $@23 . num_exp _RELOP $@24 num_exp

    _ID           shift, and go to state 57
    _INT_NUMBER   shift, and go to state 58
    _UINT_NUMBER  shift, and go to state 59
    _LPAREN       shift, and go to state 60

    num_exp        go to state 79
    exp            go to state 62
    literal        go to state 63
    function_call  go to state 64


State 75

   47 function_call: _ID $@14 _LPAREN . $@15 argument _RPAREN $@16

    $default  reduce using rule 45 ($@15)

    $@15  go to state 80


State 76

   35 num_exp: num_exp . _AROP $@11 exp
   41 exp: _LPAREN $@12 num_exp . _RPAREN $@13

    _RPAREN  shift, and go to state 81
    _AROP    shift, and go to state 71


State 77

   35 num_exp: num_exp _AROP $@11 . exp

    _ID           shift, and go to state 57
    _INT_NUMBER   shift, and go to state 58
    _UINT_NUMBER  shift, and go to state 59
    _LPAREN       shift, and go to state 60

    exp            go to state 82
    literal        go to state 63
    function_call  go to state 64


State 78

   59 if_part: $@19 _IF _LPAREN $@20 rel_exp $@21 . _RPAREN $@22 statement

    _RPAREN  shift, and go to state 83


State 79

   35 num_exp: num_exp . _AROP $@11 exp
   62 rel_exp: $@23 num_exp . _RELOP $@24 num_exp

    _AROP   shift, and go to state 71
    _RELOP  shift, and go to state 84


State 80

   47 function_call: _ID $@14 _LPAREN $@15 . argument _RPAREN $@16

    _ID           shift, and go to state 57
    _INT_NUMBER   shift, and go to state 58
    _UINT_NUMBER  shift, and go to state 59
    _LPAREN       shift, and go to state 60

    $default  reduce using rule 48 (argument)

    num_exp        go to state 85
    exp            go to state 62
    literal        go to state 63
    function_call  go to state 64
    argument       go to state 86


State 81

   41 exp: _LPAREN $@12 num_exp _RPAREN . $@13

    $default  reduce using rule 40 ($@13)

    $@13  go to state 87


State 82

   35 num_exp: num_exp _AROP $@11 exp .

    $default  reduce using rule 35 (num_exp)


State 83

   59 if_part: $@19 _IF _LPAREN $@20 rel_exp $@21 _RPAREN . $@22 statement

    $default  reduce using rule 58 ($@22)

    $@22  go to state 88


State 84

   62 rel_exp: $@23 num_exp _RELOP . $@24 num_exp

    $default  reduce using rule 61 ($@24)

    $@24  go to state 89


State 85

   35 num_exp: num_exp . _AROP $@11 exp
   49 argument: num_exp .

    _AROP  shift, and go to state 71

    $default  reduce using rule 49 (argument)


State 86

   47 function_call: _ID $@14 _LPAREN $@15 argument . _RPAREN $@16

    _RPAREN  shift, and go to state 90


State 87

   41 exp: _LPAREN $@12 num_exp _RPAREN $@13 .

    $default  reduce using rule 41 (exp)


State 88

   59 if_part: $@19 _IF _LPAREN $@20 rel_exp $@21 _RPAREN $@22 . statement

    _LBRACKET  shift, and go to state 31

    _IF       reduce using rule 50 ($@17)
    _RETURN   reduce using rule 63 ($@25)
    $default  reduce using rule 30 ($@9)

    statement             go to state 91
    compound_statement    go to state 33
    assignment_statement  go to state 34
    $@9                   go to state 35
    if_statement_print    go to state 36
    $@17                  go to state 37
    return_statement      go to state 38
    $@25                  go to state 39


State 89

   62 rel_exp: $@23 num_exp _RELOP $@24 . num_exp

    _ID           shift, and go to state 57
    _INT_NUMBER   shift, and go to state 58
    _UINT_NUMBER  shift, and go to state 59
    _LPAREN       shift, and go to state 60

    num_exp        go to state 92
    exp            go to state 62
    literal        go to state 63
    function_call  go to state 64


State 90

   47 function_call: _ID $@14 _LPAREN $@15 argument _RPAREN . $@16

    $default  reduce using rule 46 ($@16)

    $@16  go to state 93


State 91

   59 if_part: $@19 _IF _LPAREN $@20 rel_exp $@21 _RPAREN $@22 statement .

    $default  reduce using rule 59 (if_part)


State 92

   35 num_exp: num_exp . _AROP $@11 exp
   62 rel_exp: $@23 num_exp _RELOP $@24 num_exp .

    _AROP  shift, and go to state 71

    $default  reduce using rule 62 (rel_exp)


State 93

   47 function_call: _ID $@14 _LPAREN $@15 argument _RPAREN $@16 .

    $default  reduce using rule 47 (function_call)
